// Protocol buffers are a flexible, efficient, automated mechanism for serializing structured data.
// You can define how you want your data to be structured.
// Details can be found in https://developers.google.com/protocol-buffers/docs/proto3.

// Once you have defined the message, the `build.rs` will generate the corresponding data structure in `OUT_DIR`.
// You can use the structure by importing the `msg` module.
// Example:
// use crate::msg::CommitRequest;

syntax = "proto3";

package msg;

message TimestampRequest {}

message TimestampResponse {
  uint64 start_ts = 1;
}

message GetRequest {
  uint64 start_ts = 1;
  bytes key = 2;
}

message GetResponse {
  bytes value = 2;
}

message Write {
  bytes key = 1;
  bytes value = 2;
}

message PrewriteRequest {
  uint64 start_ts = 1;
  Write write = 2;
  Write primary = 3;
}

message PrewriteResponse {
  bool success = 1;
}

message CommitRequest {
  uint64 start_ts = 1;
  uint64 commit_ts = 2;
  bool is_primary = 3;
  Write write = 4;
}

message CommitResponse {
  bool success = 1;
}
